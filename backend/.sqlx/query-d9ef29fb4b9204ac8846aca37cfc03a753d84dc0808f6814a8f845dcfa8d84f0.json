{
  "db_name": "PostgreSQL",
  "query": "SELECT\n            c.id IS NOT NULL AS completed,\n            COALESCE(running, NULL) AS running,\n            SUBSTR(logs, GREATEST($1 - log_offset, 0)) AS logs,\n            COALESCE(r.memory_peak, c.memory_peak) AS mem_peak,\n            CASE\n                WHEN flow_step_id IS NULL THEN NULL\n                ELSE COALESCE(f.flow_status, c.flow_status)\n            END AS \"flow_status: sqlx::types::Json<Box<RawValue>>\",\n            job_logs.log_offset + CHAR_LENGTH(job_logs.logs) + 1 AS log_offset,\n            created_by AS \"created_by!\",\n            CASE WHEN $4::BOOLEAN THEN scalar_int END AS progress\n        FROM v2_job j\n            LEFT JOIN v2_job_queue USING (id)\n            LEFT JOIN v2_job_runtime r USING (id)\n            LEFT JOIN v2_job_flow_runtime f USING (id)\n            LEFT JOIN v2_job_completed c USING (id)\n            LEFT JOIN job_logs ON job_logs.job_id =  $3\n            LEFT JOIN job_stats ON job_stats.job_id = $3 AND metric_id = 'progress_perc'\n        WHERE j.workspace_id = $2 AND j.id = $3",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "completed",
        "type_info": "Bool"
      },
      {
        "ordinal": 1,
        "name": "running",
        "type_info": "Bool"
      },
      {
        "ordinal": 2,
        "name": "logs",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "mem_peak",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "flow_status: sqlx::types::Json<Box<RawValue>>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 5,
        "name": "log_offset",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "created_by!",
        "type_info": "Varchar"
      },
      {
        "ordinal": 7,
        "name": "progress",
        "type_info": "Int4"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Text",
        "Uuid",
        "Bool"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      false,
      null
    ]
  },
  "hash": "d9ef29fb4b9204ac8846aca37cfc03a753d84dc0808f6814a8f845dcfa8d84f0"
}
