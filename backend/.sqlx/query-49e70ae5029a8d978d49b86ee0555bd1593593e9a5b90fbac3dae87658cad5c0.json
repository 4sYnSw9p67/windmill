{
  "db_name": "PostgreSQL",
  "query": "WITH queued AS (\n            DELETE FROM v2_job_queue\n            WHERE id = ANY($1::UUID[])\n            RETURNING\n                id, workspace_id, started_at, worker, canceled_by, canceled_reason, extras\n        ), queued_and_runtime AS (\n            SELECT queued.*, GREATEST($6, memory_peak) AS memory_peak, flow_status\n            FROM queued\n                LEFT JOIN v2_job_runtime USING (id)\n                LEFT JOIN v2_job_flow_runtime USING (id)\n        ) INSERT INTO v2_job_completed (\n            id, workspace_id, started_at, worker, memory_peak, flow_status, result, labels,\n            canceled_by, canceled_reason, extras,\n            duration_ms,\n            status\n        ) SELECT\n            id, workspace_id, started_at, worker, memory_peak, flow_status, $5, $7 AS labels,\n            canceled_by, canceled_reason, extras,\n            COALESCE($2::BIGINT, CASE\n                WHEN started_at IS NULL THEN 0\n                ELSE (EXTRACT('epoch' FROM NOW()) - EXTRACT('epoch' FROM started_at)) * 1000\n            END) AS duration_ms,\n            CASE\n                WHEN canceled_by IS NOT NULL THEN 'canceled'::job_status\n                WHEN $3::BOOLEAN THEN 'skipped'::job_status\n                WHEN $4::BOOLEAN THEN 'success'::job_status\n                ELSE 'failure'::job_status\n            END AS status\n        FROM queued_and_runtime\n        RETURNING id, status = 'canceled' AS \"canceled!\", duration_ms",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "canceled!",
        "type_info": "Bool"
      },
      {
        "ordinal": 2,
        "name": "duration_ms",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "UuidArray",
        "Int8",
        "Bool",
        "Bool",
        "Jsonb",
        "Int4",
        "VarcharArray"
      ]
    },
    "nullable": [
      false,
      null,
      false
    ]
  },
  "hash": "49e70ae5029a8d978d49b86ee0555bd1593593e9a5b90fbac3dae87658cad5c0"
}
